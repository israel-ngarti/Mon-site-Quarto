[
  {
    "objectID": "Statistiques Descriptives.html",
    "href": "Statistiques Descriptives.html",
    "title": "STATISTIQUES DESCRIPTIVES",
    "section": "",
    "text": "Statistiques descriptives de n_patents\n\n\nMoyenne\nEcart_Type\nValeurs_Manquantes\nMinimum\nMaximum\n\n\n\n\n11.31783\n111.9308\n0\n1\n4870\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTop 5 des enttreprises ayant déposées le plus de brevets\n\n\nfirm_name\nn_patents\n\n\n\n\ncommissariat a l'energie atomique et aux energies alternatives\n4870\n\n\ncnrs\n4247\n\n\nalcatel\n3181\n\n\nmichelin\n2820\n\n\nsafran\n2379\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTop 5 des descriptions des IPC principaux les plus frequents\n\n\nipc_main_desc\ncount\n\n\n\n\nDIAGNOSIS; SURGERY; IDENTIFICATION (analysing biological material G01N\n571\n\n\nSPECIFIC THERAPEUTIC ACTIVITY OF CHEMICAL COMPOUNDS OR MEDICINAL PREPARATIONS\n553\n\n\nCONTAINERS FOR STORAGE OR TRANSPORT OF ARTICLES OR MATERIALS\n287\n\n\nFILTERS IMPLANTABLE INTO BLOOD VESSELS; PROSTHESES; DEVICES PROVIDING PATENCY TO\n278\n\n\nTRANSMISSION OF DIGITAL INFORMATION\n258\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTop 5 des departements principaux les plus frequents\n\n\naddr_dept_main\ncount\n\n\n\n\n75\n957\n\n\n92\n495\n\n\n69\n436\n\n\n13\n330\n\n\n38\n286\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTop 5 des villes principales les plus frequentes\n\n\naddr_city_main\ncount\n\n\n\n\nParis\n965\n\n\nLyon\n119\n\n\nMarseille\n114\n\n\nToulouse\n102\n\n\nMontpellier\n86\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStatistique n_offres\n\n\nMoyenne\nEcart_Type\nValeurs_Manquantes\nMinimum\nMaximum\n\n\n\n\n4.272468\n8.370608\n0\n1\n68\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStatistiques des salaires moyens\n\n\nMoyenne\nEcart_Type\nValeurs_Manquantes\nMinimum\nMaximum\n\n\n\n\n53230.29\n15090.82\n558\n9600\n1e+05\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTop 5 des entreprises ayant fait beaucoup d'offfres d'emploi\n\n\nfirm_name\nn_offres\n\n\n\n\ncgi\n68\n\n\ncapgemini\n63\n\n\naccenture france\n60\n\n\nalten\n48\n\n\ndata recrutement\n46\n\n\n\n\n\n\n\n\n\n\n\n\nTop 5 des secteurs principaux les plus frequents\n\n\nsector_main\ncount\n\n\n\n\nSecteur informatique, ESN\n108\n\n\nServices aux Entreprises\n39\n\n\nBanque, Assurance, Finance\n24\n\n\nDistribution, Commerce de gros\n20\n\n\nMédia, Internet, Communication\n17\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTop 5 des départements les plus fréquents\n\n\naddr_dept_main\ncount\n\n\n\n\n75\n207\n\n\n92\n90\n\n\n59\n41\n\n\n69\n32\n\n\n44\n26\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStatistique n_offres de la fusion des bases\n\n\nMoyenne\nEcart_Type\nValeurs_Manquantes\nMinimum\nMaximum\n\n\n\n\n4.27027\n8.35882\n8187\n1\n68\n\n\n\n\n\n\n\n\n\n\n\n\nStatistique salaire moyen de la fusion des bases\n\n\nMoyenne\nEcart_Type\nValeurs_Manquantes\nMinimum\nMaximum\n\n\n\n\n53230.29\n15090.82\n8747\n9600\n1e+05\n\n\n\n\n\n\n\n\n\n\n\n\nStatistique n_patents de la table fusionnée\n\n\nMoyenne\nEcart_Type\nValeurs_Manquantes\nMinimum\nMaximum\n\n\n\n\n11.43415\n112.4239\n651\n1\n4870"
  },
  {
    "objectID": "Statistiques Descriptives.html#base-emploi",
    "href": "Statistiques Descriptives.html#base-emploi",
    "title": "STATISTIQUES DESCRIPTIVES",
    "section": "",
    "text": "Statistique n_offres\n\n\nMoyenne\nEcart_Type\nValeurs_Manquantes\nMinimum\nMaximum\n\n\n\n\n4.272468\n8.370608\n0\n1\n68\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStatistiques des salaires moyens\n\n\nMoyenne\nEcart_Type\nValeurs_Manquantes\nMinimum\nMaximum\n\n\n\n\n53230.29\n15090.82\n558\n9600\n1e+05\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTop 5 des entreprises ayant fait beaucoup d'offfres d'emploi\n\n\nfirm_name\nn_offres\n\n\n\n\ncgi\n68\n\n\ncapgemini\n63\n\n\naccenture france\n60\n\n\nalten\n48\n\n\ndata recrutement\n46\n\n\n\n\n\n\n\n\n\n\n\n\nTop 5 des secteurs principaux les plus frequents\n\n\nsector_main\ncount\n\n\n\n\nSecteur informatique, ESN\n108\n\n\nServices aux Entreprises\n39\n\n\nBanque, Assurance, Finance\n24\n\n\nDistribution, Commerce de gros\n20\n\n\nMédia, Internet, Communication\n17\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTop 5 des départements les plus fréquents\n\n\naddr_dept_main\ncount\n\n\n\n\n75\n207\n\n\n92\n90\n\n\n59\n41\n\n\n69\n32\n\n\n44\n26"
  },
  {
    "objectID": "Statistiques Descriptives.html#base-emp_inno",
    "href": "Statistiques Descriptives.html#base-emp_inno",
    "title": "STATISTIQUES DESCRIPTIVES",
    "section": "",
    "text": "Statistique n_offres de la fusion des bases\n\n\nMoyenne\nEcart_Type\nValeurs_Manquantes\nMinimum\nMaximum\n\n\n\n\n4.27027\n8.35882\n8187\n1\n68\n\n\n\n\n\n\n\n\n\n\n\n\nStatistique salaire moyen de la fusion des bases\n\n\nMoyenne\nEcart_Type\nValeurs_Manquantes\nMinimum\nMaximum\n\n\n\n\n53230.29\n15090.82\n8747\n9600\n1e+05\n\n\n\n\n\n\n\n\n\n\n\n\nStatistique n_patents de la table fusionnée\n\n\nMoyenne\nEcart_Type\nValeurs_Manquantes\nMinimum\nMaximum\n\n\n\n\n11.43415\n112.4239\n651\n1\n4870"
  },
  {
    "objectID": "base_emp.html",
    "href": "base_emp.html",
    "title": "base_emp",
    "section": "",
    "text": "Chargement des packages\n\nlibrary(dplyr)\n\nWarning: le package 'dplyr' a été compilé avec la version R 4.4.2\n\n\n\nAttachement du package : 'dplyr'\n\n\nLes objets suivants sont masqués depuis 'package:stats':\n\n    filter, lag\n\n\nLes objets suivants sont masqués depuis 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(readr)\n\nWarning: le package 'readr' a été compilé avec la version R 4.4.2\n\nlibrary(stringr)\n\nWarning: le package 'stringr' a été compilé avec la version R 4.4.2\n\nlibrary(tidyr)\n\nWarning: le package 'tidyr' a été compilé avec la version R 4.4.2\n\nlibrary(stringi)\n\n\nemp_offers &lt;- read_csv(\"data/emp_offers_fmt.tsv\", show_col_types = FALSE)\n\n\n# Avoir la liste des entreprises\ndistinct(emp_offers, entreprise, .keep_all = FALSE)\n\n# A tibble: 801 × 1\n   entreprise                   \n   &lt;chr&gt;                        \n 1 Safran                       \n 2 Orano                        \n 3 Cdiscount                    \n 4 Docaposte                    \n 5 LHH Recruitment Solutions    \n 6 Assurances Crédit Mutuel  GIE\n 7 Team.is                      \n 8 Akkodis                      \n 9 Reactis Services             \n10 Solutec                      \n# ℹ 791 more rows\n\n\n\n# Harmoniser les noms des entreprises\n# Suppression des éléments tels que \"SA\", \"Inc\", etc., pour uniformiser\n emp_offers_clean &lt;- emp_offers %&gt;%\n  mutate(\n    entreprise = str_to_lower(entreprise), # Mettre en minuscule\n    entreprise = stri_trans_general(entreprise, \"Latin-ASCII\"), # Supprimer accents\n    entreprise = str_trim(entreprise), # Supprimer espaces inutiles\n    entreprise = str_replace_all(entreprise, \"\\\\s*(sa|inc|ltd|sarl|sas|gmbh|plc|corp)\\\\s*$\", \"\"), # Supprimer suffixes\n    entreprise = str_squish(entreprise), # Supprimer espaces multiples\n    entreprise = case_when(\n      str_detect(entreprise, \"axa assurances|axa funds management|axa partners|axa en france\") ~ \"axa\",\n      str_detect(entreprise, \"bouygues construction it|bouygues telecom|bouygues travaux publics\") ~ \"bouygues\",\n      str_detect(entreprise, \"ab science|ab tasty\") ~ \"ab\",\n      str_detect(entreprise, \"airbus helicopters\") ~ \"airbus\",\n      str_detect(entreprise, \"auchan retail internationa|auchan retail france\") ~ \"auchan\",\n      str_detect(entreprise, \"banque populaire rives de paris|banque populaire mediteranee\") ~ \"banque populaire\",\n      str_detect(entreprise, \"bouygues construction it|bouygues telecom|bouygues travaux publics\") ~ \"bouygues\",\n      str_detect(entreprise, \"credit agricole consumer finance|credit agricole assurances|credit agricole centre loire|credit agricole cib|credit agricole des regions du centre|credit agricole du nord est|credit agricole s.a.|credit agricole champagne bourgogne|credit agricole group infrastructure plateform\") ~ \"credit agricole\",\n      str_detect(entreprise, \"free mobile|free reseau\") ~ \"free\",\n      str_detect(entreprise, \"societe generale|societe generale securities services\") ~ \"societe generale\",\n      str_detect(entreprise, \"groupama asset management|groupama assurances mutuelles|groupama gan vie|groupama rhone alpes auvergne|groupama supports et services|groupama centre manche\") ~ \"groupama\",\n      str_detect(entreprise, \"cdiscount stage\") ~ \"cdiscount\",\n      str_detect(entreprise, \"capgemini invent\") ~ \"capgemini\",\n      str_detect(entreprise, \"octopus energy|octopus energy group|octopus it\") ~ \"octopus\",\n      str_detect(entreprise, \"dassault aviation|dassault systemes\") ~ \"dassault\",\n      str_detect(entreprise, \"vinci autoroutes|vinci construction|vinci energies\") ~ \"vinci\",\n      str_detect(entreprise, \"sii atlantique|sii est|sii ouest|sii ile de france|sii nord|sii ouest|sii technologies gmbh hr-service\") ~ \"sii\",\n      str_detect(entreprise, \"caisse d'epargne grand est europe|caisse d'epargne rhone | caisse d'epargne aquitaine poitou charentes\") ~ \"caisse d'epargne\",\n      str_detect(entreprise, \"bpce solutions informatiques\") ~ \"bpce\",\n      str_detect(entreprise, \"centre hospitalier departemental de vendee|centre hospitalier departemental de vendee site de la roche sur yon\") ~ \"centre hospitalier departemental de vendee\",\n      str_detect(entreprise, \"cls - collecte localisation satellites \") ~ \"cls\",\n      str_detect(entreprise, \"davidson consulting\") ~ \"davidson\",\n      str_detect(entreprise, \"somfy group\") ~ \"somfy\",\n      str_detect(entreprise, \"publicis sapient |publicis groupe\") ~ \"publicis\",\n      str_detect(entreprise, \"talan consulting\") ~ \"talan\",\n      str_detect(entreprise, \"veepee_france\") ~ \"veepee\",\n      str_detect(entreprise, \"altelios technology group\") ~ \"altelios technology\",\n       str_detect(entreprise, \"team.is\") ~ \"team is\",\n       str_detect(entreprise, \"sncf connect & tech\") ~ \"sncf\",\n       str_detect(entreprise, \"orange business\") ~ \"orange \",\n       str_detect(entreprise, \"onepoint group\") ~ \"onepoint\",\n       str_detect(entreprise, \"cgi finance\") ~ \"cgi\",\n\n      TRUE ~ entreprise # Garder inchangé si aucune règle ne s'applique\n    )\n  ) %&gt;%\n  \n filter(!is.na(entreprise) & entreprise != \"\") # Supprimer les lignes vides ou NA\n\n\n# 3. Suppression des entreprises proposant des freelances\nemp_offers_clean &lt;- emp_offers_clean %&gt;%\n  filter(!if_any(c(entreprise, intitule_poste), \n                 ~ str_detect(., regex(\"freelance\", ignore_case = TRUE))))  \n\n\n# 1. Calcul du nombre d'offres par entreprise\nbase_emp &lt;- emp_offers_clean %&gt;%\n  group_by(entreprise) %&gt;%\n  summarise(\n    firm_name = first(entreprise),\n    n_offres = n(),\n    .groups = \"drop\"\n  )\n\n\n# 2. Identification du secteur principal d'activité\n# Sélectionner le secteur le plus fréquent pour chaque entreprise\nsector_main &lt;- emp_offers_clean %&gt;%\n  filter(!is.na(secteur) & secteur != \"\") %&gt;%\n  group_by(entreprise, secteur) %&gt;%\n  summarise(sector_count = n(), .groups = \"drop\") %&gt;%\n  arrange(desc(sector_count)) %&gt;%\n  group_by(entreprise) %&gt;%\n  slice(1) %&gt;%\n  select(entreprise, sector_main = secteur)\n\n# Ajout de la colonne sector_main à base_emp\nbase_emp &lt;- base_emp %&gt;%\n  left_join(sector_main, by = \"entreprise\")\n\n\n# 3. Calcul de l'expérience moyenne requise pour chaque entreprise\nexp_moyenne &lt;- emp_offers_clean %&gt;%\n  filter(!is.na(experience_requise)) %&gt;%\n  group_by(entreprise) %&gt;%\n  summarise(avg_req_exp = mean(experience_requise, na.rm = TRUE), .groups = \"drop\")\n\nbase_emp &lt;- base_emp %&gt;%\n  left_join(exp_moyenne, by = \"entreprise\")\n\n\n# 4. Extraction de la compétence principale (top_skill_req) pour chaque entreprise\n# Séparer les compétences en lignes distinctes pour chaque compétence\ndata_skills &lt;- emp_offers_clean %&gt;%\n  separate_rows(competences_requises, sep = \",\\\\s*\") %&gt;%\n  mutate(competences_requises = str_trim(competences_requises))\n\n# Calculer la compétence la plus fréquente pour chaque entreprise\ntop_skills &lt;- data_skills %&gt;%\n  group_by(entreprise, competences_requises) %&gt;%\n  summarise(skill_count = n(), .groups = \"drop\") %&gt;%\n  arrange(desc(skill_count)) %&gt;%\n  group_by(entreprise) %&gt;%\n  summarise(top_skill_req = paste(unique(competences_requises[skill_count == max(skill_count)]), collapse = \", \"), .groups = \"drop\")\n\nbase_emp &lt;- base_emp %&gt;%\n  left_join(top_skills, by = \"entreprise\")\n\n\n# Étape 1: Nettoyage et préparation des salaires\nsalaire_base &lt;- emp_offers_clean %&gt;%\n  select(entreprise, salaire) %&gt;% # Sélectionner uniquement les colonnes nécessaires\n  mutate(\n    # Nettoyage de la colonne salaire\n    salaire_clean = str_replace_all(salaire, \"EUR par an|EUR par mois|par an|par mois|\\\\s\", \"\"),\n    # Supprimer \"de\" au début des chaînes de caractères\n    salaire_clean = str_replace_all(salaire_clean, \"de\\\\s+\", \"\"),\n    # Remplacer \"à\" par \"-\"\n    salaire_clean = str_replace_all(salaire_clean, \"à\", \"-\")\n  )\n\n\nsalaire_base &lt;- salaire_base %&gt;%\n  mutate(\n    # Extraire la deuxième valeur (borne max du salaire) après \"-\"\n    max_salaire = as.numeric(str_extract(salaire_clean, \"(?&lt;=-)[0-9]+\"))\n  )\n\n\nsalaire_base &lt;- salaire_base %&gt;%\n  group_by(entreprise) %&gt;% # Grouper par entreprise\n  summarise(\n    avg_wage = mean(max_salaire, na.rm = TRUE), # Calculer la moyenne des salaires max\n    .groups = \"drop\" # Désactiver le regroupement\n  ) %&gt;%\n  mutate(\n    # Remplacer les valeurs NaN par NA\n    avg_wage = ifelse(is.nan(avg_wage), NA, avg_wage)\n  )\n\n\nsalaire_base &lt;- salaire_base %&gt;%\n  mutate(\n    avg_wage = case_when(\n     # Salaires entre 30 et 200 : considérés comme abrégés (en milliers)\n      avg_wage &gt;= 30 & avg_wage &lt; 200 & !is.na(avg_wage) ~ avg_wage * 1000,\n      \n     # Salaires entre 10000 et 3000 : considérés comme mensuels, conversion en annuel\n      avg_wage &lt;= 10000 & avg_wage &gt;=1000 & !is.na(avg_wage) ~ avg_wage * 12,\n      avg_wage &lt;= 800 & avg_wage &gt;=500 & !is.na(avg_wage) ~ avg_wage * 360,\n      # Salaires déjà en milliers : ne rien modifier\n      TRUE ~ avg_wage\n    )\n  )\n\n\n#5\n# Calcul du salaire moyen pour chaque entreprise\nsalaire_base &lt;- emp_offers_clean %&gt;%\n  select(entreprise, salaire) %&gt;% # Sélectionner uniquement les colonnes nécessaires\n  mutate(\n    # Nettoyage de la colonne salaire\n    salaire_clean = str_replace_all(salaire, \"EUR par an|EUR par mois|par an|par mois|\\\\s\", \"\"),\n    salaire_clean = str_replace_all(salaire_clean, \"de\\\\s+\", \"\"), # Supprimer \"de\" au début\n    salaire_clean = str_replace_all(salaire_clean, \"à\", \"-\"), # Remplacer \"à\" par \"-\"\n    \n    # Extraction des bornes max\n    max_salaire = as.numeric(str_extract(salaire_clean, \"(?&lt;=-)[0-9]+\")), # Deuxième valeur\n    \n   \n  ) %&gt;%\n  group_by(entreprise) %&gt;%\n  summarise(\n    avg_wage = mean(max_salaire, na.rm = TRUE), # Calculer le salaire moyen par entreprise\n    .groups = \"drop\"\n  ) %&gt;%\n  mutate(\n    avg_wage = ifelse(is.nan(avg_wage), NA, avg_wage) # Remplacer NaN par NA\n  )\n# Harmoniser les salaires en milliers \nsalaire_base &lt;- salaire_base %&gt;%\n   mutate(\n    avg_wage = case_when(\n      # Salaires inférieurs à 500 sont abrégés (46 devient 46000)\n      avg_wage &lt; 500 & !is.na(avg_wage) ~ avg_wage * 1000,\n      \n      # Salaires mensuels inférieurs à 10 000 : convertir en annuel\n      avg_wage &gt;= 700 & avg_wage &lt; 10000 ~ avg_wage * 12,\n      \n      # Salaires déjà en milliers : ne pas modifier\n      TRUE ~ avg_wage\n    )\n  )\n\n\nbase_emp &lt;- base_emp %&gt;%\n  left_join(salaire_base, by = \"entreprise\")\n\n\n# 6. Identification du département principal\ndept_main &lt;- emp_offers_clean %&gt;%\n  filter(!is.na(departement)) %&gt;%\n  group_by(entreprise, departement) %&gt;%\n  summarise(dept_count = n(), .groups = \"drop\") %&gt;%\n  arrange(desc(dept_count)) %&gt;%\n  group_by(entreprise) %&gt;%\n  slice(1) %&gt;%\n  select(entreprise, addr_dept_main = departement)\n\nbase_emp &lt;- base_emp %&gt;%\n  left_join(dept_main, by = \"entreprise\")\n\n\nbase_emp$entreprise=NULL\n\n\n# Vérifier les résultats\nhead(base_emp)\n\n# A tibble: 6 × 7\n  firm_name          n_offres sector_main     avg_req_exp top_skill_req avg_wage\n  &lt;chr&gt;                 &lt;int&gt; &lt;chr&gt;                 &lt;dbl&gt; &lt;chr&gt;            &lt;dbl&gt;\n1 1dsolutions               2 &lt;NA&gt;                     NA équipe              NA\n2 1g-link consulting        2 &lt;NA&gt;                     NA Python, SQL,…    57500\n3 52 entertainment          7 &lt;NA&gt;                      3 A/B Testing,…       NA\n4 ab                        3 Secteur inform…          NA Database, Op…       NA\n5 abeille assurances        2 &lt;NA&gt;                     NA Deep Learnin…       NA\n6 abil ressources           1 Services aux E…           1 Deep Learning    55000\n# ℹ 1 more variable: addr_dept_main &lt;dbl&gt;\n\n\n\n# Exportation de la base_emp au format CSV\nwrite.csv(base_emp, \"base_emp.csv\", row.names = FALSE)\n\n#APPARIEMENT DES DEUX BASES\nPour réaliser l’appariement des deux bases de données, brevets et emploi, nous avons utilisé la fonction full_join en nous appuyant sur la variable commune firm_name.\n\nbase_brevets &lt;- read_csv(\"data/base_brevets.csv\", show_col_types = FALSE)\n\n\nbase_emp_inno &lt;- full_join(base_brevets, base_emp, by = \"firm_name\")\n\n# Vérification des premières lignes\nhead(base_emp_inno)\n\n# A tibble: 6 × 14\n  firm_name                n_patents ipc_main_code ipc_main_desc ipc_second_code\n  &lt;chr&gt;                        &lt;dbl&gt; &lt;chr&gt;         &lt;chr&gt;         &lt;chr&gt;          \n1 'add-one'                        1 A62B          DEVICES       &lt;NA&gt;           \n2 'apollon solar'                  9 H01L          SEMICONDUCTO… &lt;NA&gt;           \n3 's.a.g.a.c.e.' services…         1 B09B          DISPOSAL OF … &lt;NA&gt;           \n4 1/4 vin                          4 B65B          MACHINES      &lt;NA&gt;           \n5 10-vins                          1 B01F          MIXING        &lt;NA&gt;           \n6 1st surgiconcept                 2 A61B          DIAGNOSIS; S… A61L           \n# ℹ 9 more variables: ipc_second_desc &lt;chr&gt;, addr_city_main &lt;chr&gt;,\n#   addr_dept_main.x &lt;dbl&gt;, n_offres &lt;int&gt;, sector_main &lt;chr&gt;,\n#   avg_req_exp &lt;dbl&gt;, top_skill_req &lt;chr&gt;, avg_wage &lt;dbl&gt;,\n#   addr_dept_main.y &lt;dbl&gt;\n\n\n\n# Exportation de la base_emp_inno au format CSV\nwrite.csv(base_emp_inno, \"base_emp_inno.csv\", row.names = FALSE)"
  }
]